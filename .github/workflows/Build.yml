name: Build
permissions: write-all
on:
  workflow_dispatch:
    inputs:
      version:
        description: "Tag version to release"
        required: false
  push:
    branches:
      - master
    tags:
      - v*
    paths-ignore:
      - 'README.md'
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/workflows/issues.yml'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          # Windows
          - os: windows-latest
            arch: x64
          - os: windows-latest
            arch: ia32
          - os: windows-latest
            arch: arm64
          # Windows 7
          - os: windows-latest
            arch: x64
            win7: true
          - os: windows-latest
            arch: ia32
            win7: true
          # Linux
          - os: ubuntu-latest
            arch: x64
          - os: ubuntu-latest
            arch: arm64
          # macOS
          - os: macos-latest
            arch: x64
          - os: macos-latest
            arch: arm64
          # macOS 10
          - os: macos-latest
            arch: x64
            catalina: true
          - os: macos-latest
            arch: arm64
            catalina: true
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check out Mihomo Party
        uses: actions/checkout@v3
        with:
          repository: mihomo-party-org/mihomo-party
          ref: fa3c4121460ebf4ca4412a38b29a7f3f07075c9b
          path: mihomo-party

      - name: Customize Mihomo Party
        shell: bash
        working-directory: mihomo-party
        run: |
          cp ../customize.sh ./
          chmod +x customize.sh
          ./customize.sh

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install Dependencies and Prepare
        working-directory: mihomo-party
        env:
          npm_config_arch: ${{ matrix.arch }}
          npm_config_target_arch: ${{ matrix.arch }}
        run: |
          pnpm install
          pnpm add @mihomo-party/sysproxy-${{ matrix.os == 'windows-latest' && 'win32' || matrix.os == 'ubuntu-latest' && 'linux' || 'darwin' }}-${{ matrix.arch }}${{ matrix.os == 'ubuntu-latest' && '-gnu' || matrix.os == 'windows-latest' && '-msvc' || '' }}
          ${{ matrix.win7 && 'pnpm add -D electron@22.3.27' || matrix.catalina && 'pnpm add -D electron@32.2.2' || '' }}
          ${{ matrix.win7 && '(Get-Content electron-builder.yml) -replace ''windows'', ''win7'' | Set-Content electron-builder.yml' || matrix.catalina && 'sed -i "" -e "s/macos/catalina/" electron-builder.yml' || matrix.os == 'ubuntu-latest' && 'sed -i "s/productName: Mihomo Party/productName: mihomo-party/" electron-builder.yml' || '' }}
          pnpm prepare --${{ matrix.arch }}

      - name: Build
        working-directory: mihomo-party
        env:
          npm_config_arch: ${{ matrix.arch }}
          npm_config_target_arch: ${{ matrix.arch }}
        run: |
          ${{ contains(matrix.os, 'macos') && 'chmod +x build/pkg-scripts/postinstall' || '' }}
          pnpm build:${{ matrix.os == 'windows-latest' && 'win' || matrix.os == 'ubuntu-latest' && 'linux' || 'mac' }} --${{ matrix.arch }}

      - name: Add Portable Flag
        if: matrix.os == 'windows-latest'
        working-directory: mihomo-party
        shell: pwsh
        run: |
          New-Item -Path "PORTABLE" -ItemType File
          Get-ChildItem dist/*portable.7z | ForEach-Object {
            7z a $_.FullName PORTABLE
          }

      - name: Generate checksums
        working-directory: mihomo-party
        run: pnpm checksum ${{ matrix.os == 'windows-latest' && 'setup.exe portable.7z' || matrix.os == 'ubuntu-latest' && '.deb .rpm' || '.pkg' }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.win7 && 'Win7' || matrix.catalina && 'Catalina' || matrix.os == 'windows-latest' && 'Windows' || matrix.os == 'ubuntu-latest' && 'Linux' || 'MacOS' }} ${{ matrix.arch }}
          path: |
            mihomo-party/dist/*.sha256
            ${{ matrix.os == 'windows-latest' && 'mihomo-party/dist/*setup.exe mihomo-party/dist/*portable.7z' || matrix.os == 'ubuntu-latest' && 'mihomo-party/dist/*.deb mihomo-party/dist/*.rpm' || 'mihomo-party/dist/*.pkg' }}
          if-no-files-found: error

  pre-release:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: bin/
          merge-multiple: true

      - name: Delete Pre-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if ! gh release delete pre-release --yes; then
            echo "Failed to delete release, but continuing..."
          fi
          git log -1 --pretty=format:"%s%n%b" > changelog.md

      - name: Publish Prerelease
        if: success()
        uses: softprops/action-gh-release@v2
        with:
          tag_name: pre-release
          body_path: changelog.md
          files: |
            bin/dist/*
          prerelease: true

  release:
    if: startsWith(github.ref, 'refs/tags/v') || (github.event_name == 'workflow_dispatch' && github.event.inputs.version != '')
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'
          fetch-tags: 'true'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - uses: actions/download-artifact@v4
        with:
          path: bin/
          merge-multiple: true

      - name: Delete Current
        uses: 8Mi-Tech/delete-release-assets-action@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.event.inputs.version != '' && github.event.inputs.version || github.ref }}
          deleteOnlyFromDrafts: false

      - name: Publish Release
        if: success()
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.version != '' && github.event.inputs.version || github.ref }}
          files: |
            bin/dist/*
